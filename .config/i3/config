# set mod key
set $mod Mod4

# start in floating mode
#for_window [class="^.*"] floating enable

# drag floating windows
floating_modifier $mod

# set terminal
set $term kitty

# font for window titles
font xft:scientifica bold 8

# hide borders
hide_edge_borders none

# change borders
#bindsym $mod+u border normal 2
bindsym $mod+i border normal 0
bindsym $mod+o border pixel 2
bindsym $mod+p border none

# start terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $term --class Float

# kill focused window
bindsym $mod+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id rofi -no-lazy-grab -show drun
bindsym $mod+x exec --no-startup-id dmenu.sh

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused windows
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move focused windows
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split horizontal orientation
bindsym $mod+b split h

# split vertical orientation
bindsym $mod+v split v

# split toggle
#bindsym $mod+Shift+q split toggle

# toggle fullscreen
bindsym $mod+f fullscreen toggle

# center window titles
title_align center

# change container layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# floating toggle
# bindsym $mod+Shift+space floating toggle
bindsym $mod+t floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# center floating windows
bindsym $mod+c move absolute position center

# sticky toggle
bindsym $mod+Shift+s sticky toggle

# focus parent container
bindsym $mod+a focus parent

# move to scratchpad
bindsym $mod+Shift+minus move scratchpad

# show/hide scratchpad
bindsym $mod+minus scratchpad show

# workspaces
workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Shift+m move workspace to output right
workspace 10 output HDMI-2

# workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move focused container to workspace, and follow
bindsym $mod+Ctrl+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Ctrl+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Ctrl+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Ctrl+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Ctrl+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Ctrl+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Ctrl+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Ctrl+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Ctrl+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Ctrl+0 move container to workspace number $ws10; workspace number $ws10

# switch to urgent workspace
for_window [urgent=latest] focus

# open apps in floating mode
for_window [class="Pick-colour-picker"] floating enable
for_window [class="Nitrogen"] floating enable
for_window [class="Mediainfo-gui"] floating enable
for_window [class="Float"] floating enable
for_window [class="farge"] floating enable
for_window [class="calibre"] floating enable

# open apps on certain workspaces
#for_window [class="Gimp"] move workspace $ws3

# reload i3 configuration file
bindsym $mod+Shift+c reload

# restart i3 in place
bindsym $mod+Shift+r restart

# resize windows
mode "resize" {
        # resize with arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

	# resize with h,j,k,l
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# startup apps
exec_always --no-startup-id polybar-main-i3.sh
exec --no-startup-id picom-blur.sh
exec --no-startup-id redshift.sh
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id nitrogen --restore
exec --no-startup-id wpg -r
exec --no-startup-id libinput-gestures
exec --no-startup-id xautolock -time 10 -locker 'lock.sh' -corners 00-+
exec --no-startup-id wal-glava-b.sh

# lock screen
bindsym $mod+Escape exec lock.sh

# app bindings
bindsym $mod+F1 exec --no-startup-id nemo
bindsym $mod+F2 exec --no-startup-id google-chrome-stable
bindsym $mod+F3 exec --no-startup-id kitty --class Float -e ncmpcpp
bindsym $mod+Shift+e exec --no-startup-id gedit ~/.config/i3/config

# mpd controls
bindsym Mod1+F10 exec --no-startup-id mpc prev
bindsym Mod1+F11 exec --no-startup-id mpc toggle
bindsym Mod1+F12 exec --no-startup-id mpc next

# wal controls
bindsym $mod+F12 exec --no-startup-id wpg -m
#bindsym $mod+Shift+F12 exec --no-startup-id sxiv ~/Pictures/favs/ -t -g 630x600+60+60
#bindsym $mod+Control+F12 exec --no-startup-id wal -f random -o wal-dunst.sh
#bindsym $mod+Control+Shift+F12 exec --no-startup-id wal -R -o wal-dunst.sh

# picom controls
bindsym Control+F12 exec --no-startup-id picom-blur.sh
bindsym Control+Shift+F12 exec --no-startup-id picom.sh

# shot controls
bindsym --release $mod+Print exec --no-startup-id screenshot.sh full
bindsym --release $mod+Shift+Print exec --no-startup-id screenshot.sh window

# polybar controls
bindsym $mod+semicolon exec --no-startup-id polybar-msg cmd toggle
bindsym $mod+Shift+semicolon exec --no-startup-id polybar-menu.sh

# pulseaudio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# screen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Set colors from Xresources
set_from_resource $fg i3wm.color0 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# system menu
set $system System ... logout (l), suspend (s), reboot (r), shutdown (S), UEFI (R)
mode "$system" {
    # logout
    bindsym l exec --no-startup-id i3-msg exit, mode "default"
    # suspend
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    # reboot
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    # shutdown
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    # uefi
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"
    # back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Delete mode "$system"

############### i3-gaps stuff ##################

# necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 0

# activate smart gaps
#smart_gaps on

# Only enable outer gaps when there is exactly one container
#smart_gaps inverse_outer

# activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
#smart_borders no_gaps

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

# set inner/outer gaps
gaps inner 6
gaps outer 0

# gaps stuff
bindsym $mod+y gaps outer current toggle 100
#workspace 2 gaps outer 100

# gaps mode
set $mode_gaps Gaps: (o)uter, (i)nner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+Shift+g mode "$mode_gaps"
