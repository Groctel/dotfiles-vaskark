# set mod key
set $mod Mod4

# rounded corners (resloved fork)
#border_radius 5

# start in floating mode
#for_window [class="^.*"] floating enable

# drag floating windows
floating_modifier $mod

# set terminal
set $term kitty

# font for window titles
font xft:Iosevka Custom 7.5

# hide borders
hide_edge_borders none

# change borders
#bindsym $mod+u border normal 2
bindsym $mod+i border normal 0
bindsym $mod+o border pixel 2
bindsym $mod+p border none

# start terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $term --class Float

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
#bindsym $mod+d exec --no-startup-id rofi -no-lazy-grab -show drun -theme themes/drun.rasi
bindsym $mod+d exec --no-startup-id rofi -no-lazy-grab -show drun
bindsym $mod+Shift+d exec --no-startup-id dmenu.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+z split h
bindsym $mod+v split v
bindsym $mod+q split toggle

# toggle fullscreen
bindsym $mod+f fullscreen toggle

# center window titles
title_align center

# change container layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# floating toggle
bindsym $mod+Shift+space floating toggle
bindsym $mod+t floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# center floating windows
bindsym $mod+c move absolute position center

# sticky toggle
bindsym $mod+Shift+s sticky toggle

# focus parent container
bindsym $mod+a focus parent

# move to scratchpad
bindsym $mod+Shift+minus move scratchpad

# show/hide scratchpad
bindsym $mod+minus scratchpad show

# workspaces
workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Shift+m move workspace to output right
workspace 10 output HDMI-2

# workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# move focused container to workspace, and follow
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws10; workspace $ws10

# switch to urgent workspace
for_window [urgent=latest] focus

# open apps in floating mode
for_window [class="Pick-colour-picker"] floating enable
for_window [class="Skype"] floating enable
for_window [class="Nitrogen"] floating enable
for_window [class="Mediainfo-gui"] floating enable
for_window [class="Ukuu-gtk"] floating enable
for_window [class="Float"] floating enable
for_window [class="farge"] floating enable
for_window [class="calibre"] floating enable

# open apps on certain workspaces
#for_window [class="Gimp"] move workspace $ws3

# reload i3 configuration file
bindsym $mod+Shift+c reload

# restart i3 in place
bindsym $mod+Shift+r restart

# resize windows
mode "resize" {
        # resize with arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# startup apps
exec_always --no-startup-id polybar.sh
exec --no-startup-id picom.sh
exec --no-startup-id redshift.sh
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id nitrogen --restore
exec --no-startup-id wal -R
exec --no-startup-id libinput-gestures
exec --no-startup-id mpd.sh
#exec --no-startup-id nm-applet
exec --no-startup-id xautolock -time 10 -locker 'betterlockscreen -l pixel' -corners 00-+
exec --no-startup-id glava-mpd.sh


# lock screen
bindsym $mod+Escape exec betterlockscreen -l pixel

# app bindings
bindsym $mod+F1 exec nautilus
bindsym $mod+F2 exec google-chrome-stable
bindsym $mod+F3 exec kitty --class Float -e ncmpcpp
bindsym $mod+Shift+e exec gedit ~/.config/i3/config
bindsym --release $mod+Print exec --no-startup-id scrot -d 3 -q 85 '%Y-%m-%d_%I-%M-%S_%p.jpg' -e 'mv $f ~/Screenshots/'

# pulseaudio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# screen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Set colors from Xresources
set_from_resource $fg i3wm.color0 #f0f0f0
set_from_resource $bg i3wm.color3 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# logout, suspend, reboot, shutdown, uefi ...
set $system System ... logout (l), suspend (s), reboot (r), shutdown (S), UEFI (R)
mode "$system" {
    # logout
    bindsym l exec --no-startup-id i3-msg exit, mode "default"
    # suspend
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    # reboot
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    # shutdown
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    # uefi
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"
    # back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Delete mode "$system"


############### i3-gaps stuff ##################

# necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 1

# activate smart gaps
#smart_gaps on

# Only enable outer gaps when there is exactly one container
#smart_gaps inverse_outer

# activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
#smart_borders no_gaps

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

# set inner/outer gaps
gaps inner 10
gaps outer 10
gaps horizontal 0
gaps vertical 0
gaps top 0
gaps right 0
gaps bottom 0
gaps left 0

# gaps stuff
#bindsym $mod+y gaps outer current toggle 100
bindsym $mod+y gaps outer current plus 50
bindsym $mod+Shift+y gaps outer current minus 50
bindsym $mod+u gaps outer current toggle 100

#workspace 2 gaps outer 100

# gaps mode

bindsym $mod+Shift+g mode "$mode_gaps"

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
